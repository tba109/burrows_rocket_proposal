/*
 * Tyler Anderson Tue Nov 16 17:43:04 EST 2010
 * Read TCD event data into buffer and autocommit it
 */
#include "tcd2_command.h"
#include "tcd2_dataread.h"
#include "tcd2_config.h"
#include "tcd2_flags.h"

#include <fx2regs.h>
#include <fx2types.h>
#include <delay.h>
#include <gpif.h>

const unsigned char ctlval[3] = {0x1D,0x1B,0x1E}; // Which CS, etc
const unsigned char read1[3] = {1,1,0}; // Read 0 and 1 boards, or just 0?

unsigned char event_receive()
{
  WORD waitcount;
  const WORD MAX_WAIT_COUNT0 = 75; // about 150 us
  const WORD MAX_WAIT_COUNT1 = 25; // about 50 us
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = 0x00; SYNCDELAY4;
  GPIFADRH = 0x00; SYNCDELAL4;
  GPIFTCB0 = NEVTS;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
   
  // Timeout if the FPGA does not respond
  for(waitcount = 0; waitcount < MAX_WAIT_COUNT; waitcount++)
    { 
      if( !(GPIFTRIG & bmBIT7) ) // Still busy
	continue;
      else
	break;
    }
   
  if( waitcount == MAX_WAIT_COUNT0 ) // Timeout! Set the timeout flag and wait again
    {
#ifdef DEBUG
      printf("event_receive: Timeout! Autoreading the rest\n");
#endif
      change_evt_timeoutn(0);
    }
  
  
  // Timeout if the FPGA does not respond
  for(waitcount = 0; waitcount < MAX_WAIT_COUNT1; waitcount++)
    { 
      if( !(GPIFTRIG & bmBIT7) ) // Still busy
	continue;
      else
	break;
    }
   
  
}


// This code looks ugly, but experimentation shows it executes the fastest
// this way
void evtread()
{
  __xdata unsigned char * dest = (__xdata unsigned char*)0xE400;
    
  /////////////////////////////////////////////////////////////////////////////
  // PDs on CS1
  /////////////////////////////////////////////////////////////////////////////
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  dest[82] = ctlval[0]; SYNCDELAY4; // Setup the CS0 value
  dest[83] = ctlval[0]; SYNCDELAY4; // Setup the CS0 value

  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PXL0
  GPIFADRL = PXL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  // PXR0
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYL0
  GPIFADRL = PYL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
      // PYR0
  GPIFADRL = PYR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXL0
  GPIFADRL = MXL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXR0
  GPIFADRL = MXR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYL0
  GPIFADRL = MYL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYR0
  GPIFADRL = MYR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // S30
  GPIFADRL = S30; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // CD0
  GPIFADRL = CD0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
      
  // PXL1
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  // PXR1
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYL1
  GPIFADRL = PYL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYR1
  GPIFADRL = PYR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXL1
  GPIFADRL = MXL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXR1
  GPIFADRL = MXR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYL1
  GPIFADRL = MYL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYR1
  GPIFADRL = MYR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // S31
  GPIFADRL = S31; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // CD1
  GPIFADRL = CD1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num

  /////////////////////////////////////////////////////////////////////////////
  // TDCs on CS2
  /////////////////////////////////////////////////////////////////////////////

  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  dest[82] = ctlval[1]; SYNCDELAY4; // Setup the CS value
  dest[83] = ctlval[1]; SYNCDELAY4; // Setup the CS value

  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PXL0
  GPIFADRL = PXL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  // PXR0
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYL0
  GPIFADRL = PYL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
      // PYR0
  GPIFADRL = PYR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXL0
  GPIFADRL = MXL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXR0
  GPIFADRL = MXR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYL0
  GPIFADRL = MYL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYR0
  GPIFADRL = MYR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // S30
  GPIFADRL = S30; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // CD0
  GPIFADRL = CD0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
      
  // PXL1
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  // PXR1
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYL1
  GPIFADRL = PYL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYR1
  GPIFADRL = PYR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXL1
  GPIFADRL = MXL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXR1
  GPIFADRL = MXR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYL1
  GPIFADRL = MYL1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYR1
  GPIFADRL = MYR1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // S31
  GPIFADRL = S31; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // CD1
  GPIFADRL = CD1; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x05; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num

  /////////////////////////////////////////////////////////////////////////////
  // Trigger on CS0
  /////////////////////////////////////////////////////////////////////////////

  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  dest[82] = ctlval[2]; SYNCDELAY4; // Setup the CS value
  dest[83] = ctlval[2]; SYNCDELAY4; // Setup the CS value
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PXL0
  GPIFADRL = PXL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  // PXR0
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  GPIFADRL = PXR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // PYL0
  GPIFADRL = PYL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
      // PYR0
  GPIFADRL = PYR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXL0
  GPIFADRL = MXL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MXR0
  GPIFADRL = MXR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYL0
  GPIFADRL = MYL0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // MYR0
  GPIFADRL = MYR0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // S30
  GPIFADRL = S30; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num
  
  while ( !(GPIFTRIG & 0x80) ); // wait until things are finished
  // CD0
  GPIFADRL = CD0; SYNCDELAY4; // 1us
  GPIFTCB0 = 0x04; SYNCDELAY4;
  GPIFTRIG = 6; // R/W=0, E[1:0] = ep_num

}
